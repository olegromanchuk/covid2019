AWSTemplateFormatVersion: 2010-09-09

Description: Covid2019-automated-dialer-template

Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t1.micro
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    AllowedPattern: '.+'
  VPCID:
    Description: VPC
    Type: 'AWS::EC2::VPC::Id'
    ConstraintDescription: must be VPC.
    AllowedPattern: '.+'
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  HTTPLocation:
    Description: The IP address range that can be used to access web interface. Use https://whatismyip.com to check your IP
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  SIPSignallingLocation:
    Description: The IP address range that can be used for signalling SIP traffic. Chime default 4 us-west-2 99.77.253.0/24
    Type: String
    Default: 99.77.253.0/24
    # AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    # ConstraintDescription: must be a comma-separated list of valid IP CIDR range of the form x.x.x.x/x,y.y.y.y/y.
  SIPMediaLocation:
    Description: The IP address range that can be used for media SIP traffic. Chime default 4 us-west-2 99.77.253.0/24
    Type: String
    Default: 99.77.253.0/24
    # AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  RepoAddress:
    Description: Address of repository from where the source code should be downloaded. Leave it to default
    Type: String
    Default: https://github.com/olegromanchuk/covid2019.git
  AdminEmail:
    Type: String
    Description: Email for notifications
    Default: admin@adsos.us
  DBName:
    Default: covid2019autodialer
    Description: Covid2019
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  DBUsername:
    NoEcho: 'true'
    Description: Username for database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    Default: dbadminRe3fvd3h
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: Password database access
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    Default: databasepass3RfRe3fvd3h
    ConstraintDescription: must contain only alphanumeric characters.
  PhoneNumber:
    Description: 'Phone number. Used for making outgoing calls and record a message. This is your phone number in Chime. Must be in format +1xxxxxxxxxx. For example: +12124567890'
    Type: String
    MinLength: '12'
    MaxLength: '12'
    AllowedPattern: '[\\+0-9]*'
    ConstraintDescription: 'Phone number must be in format +1xxxxxxxxxx. For example: +12124567890'
  CompanyName:
    Description: Company name. Used in outgoing calls.
    Type: String
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: '[-a-zA-Z0-9]*'
    Default: 'AutoDialer'
    ConstraintDescription: must contain only alphanumeric characters.
  SIPHost:
    Description: 'Domain name or IP address of SIP provider. In Chime you can find it under "Calling->Voice connectors. Outbound host name. For example: chimecustomurl.voiceconnector.chime.aws"'
    Type: String
    AllowedPattern: '[-a-zA-Z0-9\\.]*'
    ConstraintDescription:  "For example chimecustomurl.voiceconnector.chime.aws"

Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    m1.small:
      Arch: HVM64
    m1.medium:
      Arch: HVM64
    m1.large:
      Arch: HVM64
    m1.xlarge:
      Arch: HVM64
    m2.xlarge:
      Arch: HVM64
    m2.2xlarge:
      Arch: HVM64
    m2.4xlarge:
      Arch: HVM64
    m3.medium:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m3.2xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    c1.medium:
      Arch: HVM64
    c1.xlarge:
      Arch: HVM64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    g2.8xlarge:
      Arch: HVMG2
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-04505e74c0741db8d
    us-east-2:
      HVM64: ami-0fb653ca2d3203ac1
      HVMG2: NOT_SUPPORTED
    us-west-1:
      HVM64: ami-01f87c43e618bf8f0
    us-west-2:
      HVM64: ami-0892d3c7ee96c0bf7

Resources:
  IAMRole4EC2:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: SESAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "SES:SendEmail"
                  - "SES:SendRawEmail"
                Resource:
                  - !Sub "arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity:*"
  EC2Instance:
    Type: AWS::EC2::Instance
    DependsOn: 
      - MariaDB
      - InstanceAndDBSecurityGroup
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 50
            VolumeType: gp2
            DeleteOnTermination: true
        - DeviceName: /dev/sdf
          Ebs:
            VolumeSize: 2
            VolumeType: gp2
            DeleteOnTermination: true
      # ImageId: #Ubuntu Server 20.04 LTS (HVM), SSD Volume Type
      #   ami-0892d3c7ee96c0bf7
      #   #TODO - update amis
      ImageId: !FindInMap
               - AWSRegionArch2AMI
               - !Ref 'AWS::Region'
               - !FindInMap
                 - AWSInstanceType2Arch
                 - !Ref InstanceType
                 - Arch
      SecurityGroupIds:
        - !GetAtt InstanceAndDBSecurityGroup.GroupId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref AssignRole
      Tags: 
          - Key: Name
            Value: 'auto-dialer-adsos'
          - Key: Project
            Value: covid2019
          - Key: Environment
            Value: development
          - Key: CodeDeploy
            Value: "yes"
          - Key: project
            Value: 'auto-dialer-adsos'
  
      Tenancy: default
      UserData:
        Fn::Base64: !Sub
        - |
          #!/bin/bash -x
          export DBNAME=${DBName}
          export DBUSER=${DBUsername}
          export DBPASS=${DBPassword}
          export DBHOST=${DBHost}
          export SITE_URL=covid-test.mydomain.com
          export PHONE_NUMBER=${PhoneNumber}
          export COMPANY_NAME=${CompanyName}
          export SIP_PROVIDER_ADDRESS_IP_OR_DNS=${SIPHost}
          export ADMIN_EMAIL=${AdminEmail}
          export REPO_ADDRESS=${RepoAddress}
          export INSTALL_DIR=/usr/local/utils
          export WWW_DIR=/var/www/html
          export COMPOSER_ALLOW_SUPERUSER=1
          export HOME=/root
          export COMPOSER_HOME=/root/.config/composer
          export NODE_OPTIONS=--openssl-legacy-provider

          echo "export DBNAME=${DBName}" >> /tmp/env.sh
          echo "export DBUSER=${DBUsername}" >> /tmp/env.sh
          echo "export DBPASS=${DBPassword}" >> /tmp/env.sh
          echo "export DBHOST=${DBHost}" >> /tmp/env.sh
          echo "export SITE_URL=covid-test.mydomain.com" >> /tmp/env.sh
          echo "export PHONE_NUMBER=${PhoneNumber}" >> /tmp/env.sh
          echo "export COMPANY_NAME=${CompanyName}" >> /tmp/env.sh
          echo "export SIP_PROVIDER_ADDRESS_IP_OR_DNS=${SIPHost}" >> /tmp/env.sh
          echo "export ADMIN_EMAIL=${AdminEmail}" >> /tmp/env.sh
          echo "export REPO_ADDRESS=${RepoAddress}" >> /tmp/env.sh
          echo "export INSTALL_DIR=/usr/local/utils" >> /tmp/env.sh
          echo "export WWW_DIR=/var/www/html" >> /tmp/env.sh
          echo "export COMPOSER_ALLOW_SUPERUSER=1" >> /tmp/env.sh
          echo "export HOME=/root" >> /tmp/env.sh
          echo "export COMPOSER_HOME=/root/.config/composer" >> /tmp/env.sh
          echo "export NODE_OPTIONS=--openssl-legacy-provider" >> /tmp/env.sh
          export IP_ADDRESS=`curl http://169.254.169.254/latest/meta-data/public-ipv4`
          if [[ ! -d ${!INSTALL_DIR} ]]; then
            mkdir -p ${!INSTALL_DIR}
          fi
          cd ${!INSTALL_DIR}
          #UPDATE git clone ${!REPO_ADDRESS} covid
          #GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" git clone ${!REPO_ADDRESS} covid
          git clone ${!REPO_ADDRESS} covid
          cd covid/backend-asterisk/
          ./scripts/install_4_cloudformation_ubuntu.sh
        - DBHost: !GetAtt MariaDB.Endpoint.Address
  
  AssignRole:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles: 
        - !Ref IAMRole4EC2

  InstanceAndDBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref HTTPLocation
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref HTTPLocation
        - IpProtocol: udp
          FromPort: '5060'
          ToPort: '5060'
          CidrIp: !Ref SIPSignallingLocation
        - IpProtocol: udp
          FromPort: '5000'
          ToPort: '65000'
          CidrIp: !Ref SIPMediaLocation

  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref InstanceAndDBSecurityGroup
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      SourceSecurityGroupId: !GetAtt InstanceAndDBSecurityGroup.GroupId 
      
  

  IPAddress:
    Type: 'AWS::EC2::EIP'
  IPAssoc:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      InstanceId: !Ref EC2Instance
      EIP: !Ref IPAddress

  MariaDB:
    Type: 'AWS::RDS::DBInstance'
    DependsOn: InstanceAndDBSecurityGroup
    Properties:
      DBInstanceIdentifier: covid2019databaseinstance
      DBName: covid2019database
      DBInstanceClass: db.t2.micro
      DBParameterGroupName: !Ref nDBParameterGroup
      VPCSecurityGroups: 
        - !GetAtt InstanceAndDBSecurityGroup.GroupId
      AllocatedStorage: 20
      Engine: MariaDB
      EngineVersion: 10.5.13
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      Tags: 
        - Key: project
          Value: 'auto-dialer-adsos'
    
  nDBParameterGroup:
    Type: 'AWS::RDS::DBParameterGroup'
    Properties: 
      Description: 'Parameter Group w SUPER priv'
      Family: 'mariadb10.5'
      Parameters:
        log_bin_trust_function_creators: '1'
      Tags: 
        - Key: project
          Value: 'auto-dialer-adsos'
  
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  InstanceIPAddress:
    Description: IP address of the newly created EC2 instance
    Value: !Ref IPAddress
  DatabaseHost:
    Description: DatabaseHostUrl
    Value: !GetAtt MariaDB.Endpoint.Address