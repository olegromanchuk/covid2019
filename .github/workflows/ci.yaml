on: push
name: CI

defaults:
 run:
  working-directory: ./frontend

jobs:
  phpunit:
    runs-on: ubuntu-latest
    container:
      image: kirschbaumdevelopment/laravel-test-runner:7.4-beta

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"

    # - uses: actions/cache@v1
    #   with:
    #     path: ${{ steps.composer-cache.outputs.dir }}
    #     key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-composer-

    - name: Get yarn cache
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"

    # - uses: actions/cache@v1
    #   with:
    #     path: ${{ steps.yarn-cache.outputs.dir }}
    #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-yarn-

    - name: Install composer dependencies
      run: |
        composer install --no-scripts

    - name: Prepare Laravel Application
      run: |
        cp .env.ci .env
        php artisan key:generate

    - name: Install front-end dependencies
      run: |
        npm install
        npm run dev

    - name: Run Testsuite
      run: vendor/bin/phpunit tests/

    - name: Run artisan serve
      run: |
        php artisan serve &

    - name: Make Request
      id: myRequest
      uses: fjogeleit/http-request-action@v1
      with:
        url: "http://localhost:8000"
        method: GET
    - name: Show Response
      run: echo ${{ steps.myRequest.outputs.response }}
